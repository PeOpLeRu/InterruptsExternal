// Будем обрабатывать прерывание 0 (2 пин) на повышение сигнала (RISING)
 
 ISR(INT0_vect)  // Макрос для компилятора, создающий функцию для вектора прерываний. (Первыйй аргумент задает внешнее прерывание (№0 (2 цифровой пин)); Второй аргумент убирает asm подстановки компилятора для сейва регистров (нам не нужно))
{
    uint8_t data = PORTB ^ 0x20;    // Инвертируем значение с пина D13 (6 бит)
    PORTB = data;   // digitalWrite(13, !digitalRead(13));

    reti();  // Выход из функции
}

void setup()
{
    // Настройка портов

    DDRB |= 1 << 5; // Пин D13 output
    DDRD &= ~(1 << 2); // Пин D2 input

    // Настройка прерывания

    // разрешаем прерывание INT0
    EIMSK |= 0x01;    // (0b0000'0001)

    // Настраиваем тип собьтия прерывания (RISING (рост) – срабатывает при изменении сигнала с LOW на HIGH) -> устанавливаем два младших бита в 1
    EICRA |= 0x03;    // (0b0000'0011)

    // разрешаем обработку прерываний глобально
    SREG |= 0x01;
}

void loop() { }